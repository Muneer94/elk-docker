---

- name: Copy Jenkins Dockerfile
  copy:
    src: ./Dockerfile
    dest: "{{ jenkins_docker_path }}"
    owner: root
    group: root
    mode: '0644'

- name: Build Jenkins image with ansible from Dockerfile
  community.docker.docker_image:
    name: "{{ jenkins_docker_image }}:{{ jenkins_version }}"
    build:
      path: "{{ jenkins_docker_path }}"
    source: build
    state: present

- name: Ensure jenkins home dir is created
  file:
    path: "{{ jenkins_home }}"
    mode: 0777
    owner: "{{ jenkins_config_owner }}"
    group: "{{ jenkins_config_group }}"
    state: directory

- name: Container is running (with ingress port)
  docker_container:
    name: "{{ jenkins_docker_container_name }}"
    image: "{{ jenkins_docker_image }}:{{ jenkins_version }}"
    published_ports:
    - "{{ jenkins_port }}:8080"
    volumes:
    - "{{ jenkins_home }}:/var/jenkins_home"
    env:
      JAVA_OPTS: "{{ jenkins_java_opts }}"
  register: container_result
  when: jenkins_docker_expose_port

- name: Container is running (without ingress port)
  docker_container:
    name: "{{ jenkins_docker_container_name }}"
    image: "{{ jenkins_docker_image }}:{{ jenkins_version }}"
    expose:
    - "8080"
    volumes:
    - "{{ jenkins_home }}:/var/jenkins_home"
    env:
      JAVA_OPTS: "{{ jenkins_java_opts }}"
  register: container_result
  when: not jenkins_docker_expose_port

# - name: Pause container  # noqa 503
#   pause:
#     seconds: 45
#   when: container_result|changed

- name: Install plugins without an API token
  jenkins_plugin:
    name: "{{ item }}"
    jenkins_home: "{{ jenkins_home }}"
    owner: "{{ jenkins_config_owner }}"
    group: "{{ jenkins_config_group }}"
    url: "{{ jenkins_url }}"
    timeout: "{{ jenkins_plugin_timeout }}"
  with_items: "{{ jenkins_plugins }}"