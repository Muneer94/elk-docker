server_name: localhost
network_name: esnet

nginx_image: nginx:1.15-alpine
nginx_hostname: ng01
nginx_conf_dir: /usr/share/nginx

elasticsearch_image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
elasticsearch_hostname: es01
elasticsearch_conf_dir: /usr/share/elasticsearch
elastic_password: muneer

log_driver: "json-file"
log_max_size: "10m"
log_max_file: "3"

kibana_image: docker.elastic.co/kibana/kibana:7.3.2
kibana_hostname: ki01

logstash_image: docker.elastic.co/logstash/logstash:7.4.0
logstash_hostname: lo01
logstash_conf_dir: /usr/share/logstash

certbot_image: certbot/certbot
certbot_hostname: cb01
certbot_conf_dir: /usr/share/certbot
certbot_email: info@example.com

heartbeat_image: docker.elastic.co/beats/heartbeat:7.4.0
heartbeat_hostname: hb01
heartbeat_servername: status.example.com
heartbeat_conf_dir: /usr/share/heartbeat
heartbeat_urls:
- https://example.com
- https://status.example.com
metricbeat_image: docker.elastic.co/beats/metricbeat:7.4.0
metricbeat_hostname: mb01
metricbeat_servername: status.example.com
metricbeat_conf_dir: /usr/share/metricbeat

filebeat_image: docker.elastic.co/beats/filebeat:7.4.0
filebeat_hostname: fb01
filebeat_servername: status.example.com
filebeat_conf_dir: /usr/share/filebeat

heartbeatwatcher_image: nexus.example.com:4043/heartbeat-watcher:1.0.1
heartbeatwatcher_hostname: "hw01"
heartbeatwatcher_conf_dir: /usr/share/heartbeatwatcher
heartbeatwatcher_smtp_host: "login.example.com"
heartbeatwatcher_smtp_username: "status@example.com"
heartbeatwatcher_smtp_password: "{{ vault_heartbeatwatcher_smtp_password }}"
heartbeatwatcher_mail_to: "contact@example.com"
heartbeatwatcher_mail_from: "status@example.com"






jenkins_version: "2.289.3"  # The exact version of jenkins to deploy
jenkins_url: "http://10.60.61.10:8080"
jenkins_hostname: "127.0.0.1"  # The hostname that Jenkins will be accessible on
# The port that Jenkins will listen on for unsecured (HTTP) requests. Define to -1 to
# disable HTTP.
jenkins_port: "8080"
# The port that Jenkins will listen on for secured (HTTPS) requests. Define to -1 to
# disable HTTPS. Enabling this option requires a SSL certificate (see below).
jenkins_port_https: "-1"
jenkins_home: /data/jenkins  # The directory on the server where the Jenkins configs live
jenkins_admin: "admin@example.com"  # The administrator email address for the server

# If you need to override any java options then do that here.
jenkins_java_opts: "-Djenkins.install.runSetupWizard=false -Dhudson.model.DownloadService.noSignatureCheck=true"

# Configuration files owner and group
jenkins_config_owner: "ubuntu"
jenkins_config_group: "ubuntu"

# The locations of the configuration files for jenkins
jenkins_source_dir_configs: "{{ playbook_dir }}/jenkins-configs"
jenkins_source_dir_jobs: "{{ jenkins_source_dir_configs }}/jobs"

# When defined, include this task file after configuring jobs. This happens
# at the very end of the role, but before Jenkins is taken out of quiet mode.
jenkins_after_config_jobs_file: ""

# config.xml template source
jenkins_source_config_xml: "{{ jenkins_source_dir_configs }}/config.xml"

# Include custom files for jenkins installation
jenkins_include_custom_files: false
jenkins_custom_files: {}  # src and dest names

# Include secrets directory during installation
jenkins_include_secrets: false
jenkins_source_secrets: "{{ jenkins_source_dir_configs }}/secrets/"

# The names of the jobs (config.xml must exist under jenkins_source_dir_jobs/job_name/)
jenkins_jobs: []

# List of plugins to install in the Jenkins instance
jenkins_plugins:
- git
- configuration-as-code
- github-branch-source
- pipeline-github-lib
- pipeline-stage-view
- workflow-aggregator
- ws-cleanup
- ansible

# How long to wait for installing plugins, in seconds. If you are seeing failures in the
# "Wait for plugins to finish installing" task with an error message like "Timeout when
# waiting for file <plugin_name.jpi>", you may want to increase this value.
jenkins_plugin_timeout: 300

# List of sources of custom jenkins plugins to install
jenkins_custom_plugins: []

#######################
# Authentication vars #
#######################

# Mechanism to use when authenticating to Jenkins. Must be one of the following values:
# - api: Use an API token which belongs to a specific user
# - crumb: Use anonymous crumb-based authentication
# - none: No security (not recommended)
# For more information, please refer to the "Authentication and Security" section of the
# README.
jenkins_auth: "crumb"

# When defined, use this API token instead of getting a crumb from the system. Requires
# jenkins_api_username.
jenkins_api_token: ""
# Username which owns the above API token.
jenkins_api_username: ""

#########################################
# SSL vars: apply to Jenkins HTTPS only #
#########################################

# See https://wiki.jenkins.io/display/JENKINS/Starting+and+Accessing+Jenkins for more info

# Jenkins JKS keystore file. Mutually exclusive with the certificate/private key options.
jenkins_https_keystore: ""
# Jenkins JKS keystore password.
jenkins_https_keystore_password: ""

# Jenkins CA signed certificate file. Mutually exclusive with the keystore options.
jenkins_https_certificate: ""
# Jenkins CA signed certificate private key.
jenkins_https_private_key: ""

# Set to false if you are using a self-signed certificate and wish to ignore any
# certificate verification errors from Ansible.
jenkins_https_validate_certs: true

###################################################
# Docker vars: apply to deploying via docker only #
###################################################

# The docker hub image name
jenkins_docker_image: "jenkins/jenkins"

# Configs specific to the "docker" method of running jenkins
# The name of the jenkins container
jenkins_docker_container_name: jenkins

# Default, if true, the port will be exposed on the host (using "port")
# If set to false, the port will only be exposed to other containers (using "expose")
jenkins_docker_expose_port: true